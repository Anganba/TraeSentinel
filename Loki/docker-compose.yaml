services:
  loki:
    image: grafana/loki:3.5.7
    container_name: loki
    command: -config.file=/etc/loki/config.yaml
    restart: unless-stopped

    volumes:
      - ./config/loki.yaml:/etc/loki/config.yaml:ro
      - data_loki:/loki
    # ports:
    #   - "3100:3100"

    labels:
      - "traefik.enable=true"

      # ===============================================================
      # üåç HTTP Router (Traefik‚Äôs built-in redirect handles this)
      # ===============================================================
      - "traefik.http.routers.loki.rule=Host(`loki.${DOMAIN}`)"
      - "traefik.http.routers.loki.entrypoints=web"

      # ===============================================================
      # üîí HTTPS Secure Router
      # ===============================================================
      - "traefik.http.routers.loki-secure.rule=Host(`loki.${DOMAIN}`)"
      - "traefik.http.routers.loki-secure.entrypoints=websecure"
      - "traefik.http.routers.loki-secure.tls.certresolver=${PROVIDER}"
      - "traefik.http.routers.loki-secure.service=loki-svc"

      # üë§ (Optional) Add basic auth if you want to protect Loki‚Äôs API
      # - "traefik.http.middlewares.loki-auth.basicauth.users=admin:${TRAEFIK_PASSWORD}"
      # - "traefik.http.routers.loki-secure.middlewares=loki-auth,secure-headers@docker"

      # üß© Apply global secure-headers middleware
      - "traefik.http.routers.loki-secure.middlewares=secure-headers@docker"

      # ===============================================================
      # ‚öôÔ∏è Service Definition
      # ===============================================================
      - "traefik.http.services.loki-svc.loadbalancer.server.port=3100"

    networks:
      - frontend
      - monitoring

volumes:
  data_loki:

networks:
  frontend:
    external: true
  monitoring:
    external: true
